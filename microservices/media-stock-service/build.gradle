plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.coursehub'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
}

dependencies {


    // Courshub commons my own libraries
    implementation 'com.coursehub:coursehub-commons-kafka:1.0.0'
    implementation 'com.coursehub:coursehub-commons-security:1.0.0'
    implementation 'com.coursehub:coursehub-commons-exceptions:1.0.0'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    //Minio
    implementation 'io.minio:minio:8.5.10'

    //Kafka
    implementation 'org.springframework.kafka:spring-kafka'


    //Feign Client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //resilience4j failure tolerance
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}